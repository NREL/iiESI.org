//** Accordion Content script: By Dynamic Drive, at http://www.dynamicdrive.com
//** Created: Jan 7th, 08'. Last updated: Feb 16th, 2012 to v2.0
//http://www.dynamicdrive.com/dynamicindex17/ddaccordion.htm?technology=0,1,2
//Version 1.9: June 7th, 2010':
//**1) Ajax content support added, so a given header's content can be dynamically fetched from an external file and on demand.
//**2) Optimized script performance by caching header and content container references

//Version 2.0: Feb 16th, 2012':
//** 1) Added option ("scrolltoheader") to scroll to the expanded header in question after it expands (useful if a header contains long content).

var ddaccordion={ajaxloadingmsg:'<img src="assets/js/loader.gif" /><br>Loading Content...',headergroup:{},contentgroup:{},preloadimages:function(a){a.each(function(){var b=new Image();b.src=this.src})},expandone:function(c,a,b){this.toggleone(c,a,"expand",b)},collapseone:function(b,a){this.toggleone(b,a,"collapse")},expandall:function(b){var a=this.headergroup[b];this.contentgroup[b].filter(":hidden").each(function(){a.eq(parseInt($(this).attr("contentindex"))).trigger("evt_accordion")})},collapseall:function(b){var a=this.headergroup[b];this.contentgroup[b].filter(":visible").each(function(){a.eq(parseInt($(this).attr("contentindex"))).trigger("evt_accordion")})},toggleone:function(f,c,a,d){var e=this.headergroup[f].eq(c);var b=this.contentgroup[f].eq(c);if(typeof a=="undefined"||a=="expand"&&b.is(":hidden")||a=="collapse"&&b.is(":visible")){e.trigger("evt_accordion",[true,d])}},ajaxloadcontent:function(f,a,b,e){var c=f.data("ajaxinfo");function d(g){if(g){c.cacheddata=g;c.status="cached";if(a.queue("fx").length==0){a.hide().html(g);c.status="complete";e()}}if(c.status!="complete"){setTimeout(function(){d(c.cacheddata)},100)}}if(c.status=="none"){a.html(this.ajaxloadingmsg);a.slideDown(b.animatespeed);c.status="loading";$.ajax({url:c.url,error:function(g){d("Error fetching content. Server Response: "+g.responseText)},success:function(g){g=(g=="")?" ":g;d(g)}})}else{if(c.status=="loading"){d(c.cacheddata)}}},expandit:function(h,a,d,f,c,b,g){var e=h.data("ajaxinfo");if(e){if(e.status=="none"||e.status=="loading"){this.ajaxloadcontent(h,a,d,function(){ddaccordion.expandit(h,a,d,f,c)})}else{if(e.status=="cached"){a.html(e.cacheddata);e.cacheddata=null;e.status="complete"}}}this.transformHeader(h,d,"expand");a.slideDown(b?0:d.animatespeed,function(){d.onopenclose(h.get(0),parseInt(h.attr("headerindex")),a.css("display"),f);if(g){var j=(d.collapseprev)?20:0;clearTimeout(d.sthtimer);d.sthtimer=setTimeout(function(){ddaccordion.scrollToHeader(h)},j)}if(d.postreveal=="gotourl"&&c){var i=(h.is("a"))?h.get(0):h.find("a:eq(0)").get(0);if(i){setTimeout(function(){location=i.href},200+(g?400+j:0))}}})},scrollToHeader:function(a){ddaccordion.$docbody.stop().animate({scrollTop:a.offset().top},400)},collapseit:function(d,a,c,b){this.transformHeader(d,c,"collapse");a.slideUp(c.animatespeed,function(){c.onopenclose(d.get(0),parseInt(d.attr("headerindex")),a.css("display"),b)})},transformHeader:function(c,a,b){c.addClass((b=="expand")?a.cssclass.expand:a.cssclass.collapse).removeClass((b=="expand")?a.cssclass.collapse:a.cssclass.expand);if(a.htmlsetting.location=="src"){c=(c.is("img"))?c:c.find("img").eq(0);c.attr("src",(b=="expand")?a.htmlsetting.expand:a.htmlsetting.collapse)}else{if(a.htmlsetting.location=="prefix"){c.find(".accordprefix").empty().append((b=="expand")?a.htmlsetting.expand:a.htmlsetting.collapse)}else{if(a.htmlsetting.location=="suffix"){c.find(".accordsuffix").empty().append((b=="expand")?a.htmlsetting.expand:a.htmlsetting.collapse)}}}},urlparamselect:function(b){var a=window.location.search.match(new RegExp(b+"=((\\d+)(,(\\d+))*)","i"));if(a!=null){a=RegExp.$1.split(",")}return a},getCookie:function(a){var b=new RegExp(a+"=[^;]+","i");if(document.cookie.match(b)){return document.cookie.match(b)[0].split("=")[1]}return null},setCookie:function(a,b){document.cookie=a+"="+b+"; path=/"},init:function(a){document.write('<style type="text/css">\n');document.write("."+a.contentclass+"{display: none}\n");document.write("a.hiddenajaxlink{display: none}\n");document.write("</style>");jQuery(document).ready(function(g){ddaccordion.urlparamselect(a.headerclass);var b=ddaccordion.getCookie(a.headerclass);ddaccordion.headergroup[a.headerclass]=g("."+a.headerclass);ddaccordion.contentgroup[a.headerclass]=g("."+a.contentclass);ddaccordion.$docbody=(window.opera)?(document.compatMode=="CSS1Compat"?jQuery("html"):jQuery("body")):jQuery("html,body");var e=ddaccordion.headergroup[a.headerclass];var d=ddaccordion.contentgroup[a.headerclass];a.cssclass={collapse:a.toggleclass[0],expand:a.toggleclass[1]};a.revealtype=a.revealtype||"click";a.revealtype=a.revealtype.replace(/mouseover/i,"mouseenter");if(a.revealtype=="clickgo"){a.postreveal="gotourl";a.revealtype="click"}if(typeof a.togglehtml=="undefined"){a.htmlsetting={location:"none"}}else{a.htmlsetting={location:a.togglehtml[0],collapse:a.togglehtml[1],expand:a.togglehtml[2]}}a.oninit=(typeof a.oninit=="undefined")?function(){}:a.oninit;a.onopenclose=(typeof a.onopenclose=="undefined")?function(){}:a.onopenclose;var c={};var f=ddaccordion.urlparamselect(a.headerclass)||((a.persiststate&&b!=null)?b:a.defaultexpanded);if(typeof f=="string"){f=f.replace(/c/ig,"").split(",")}if(f.length==1&&f[0]=="-1"){f=[]}if(a.collapseprev&&f.length>1){f=[f.pop()]}if(a.onemustopen&&f.length==0){f=[0]}e.each(function(j){var h=g(this);if(/(prefix)|(suffix)/i.test(a.htmlsetting.location)&&h.html()!=""){g('<span class="accordprefix"></span>').prependTo(this);g('<span class="accordsuffix"></span>').appendTo(this)}h.attr("headerindex",j+"h");d.eq(j).attr("contentindex",j+"c");var i=d.eq(j);var k=i.find("a.hiddenajaxlink:eq(0)");if(k.length==1){h.data("ajaxinfo",{url:k.attr("href"),cacheddata:null,status:"none"})}var l=(typeof f[0]=="number")?j:j+"";if(jQuery.inArray(l,f)!=-1){ddaccordion.expandit(h,i,a,false,false,!a.animatedefault);c={$header:h,$content:i}}else{i.hide();a.onopenclose(h.get(0),parseInt(h.attr("headerindex")),i.css("display"),false);ddaccordion.transformHeader(h,a,"collapse")}});e.bind("evt_accordion",function(k,i,j){var h=d.eq(parseInt(g(this).attr("headerindex")));if(h.css("display")=="none"){ddaccordion.expandit(g(this),h,a,true,i,false,j);if(a.collapseprev&&c.$header&&g(this).get(0)!=c.$header.get(0)){ddaccordion.collapseit(c.$header,c.$content,a,true)}c={$header:g(this),$content:h}}else{if(!a.onemustopen||a.onemustopen&&c.$header&&g(this).get(0)!=c.$header.get(0)){ddaccordion.collapseit(g(this),h,a,true)}}});e.bind(a.revealtype,function(){if(a.revealtype=="mouseenter"){clearTimeout(a.revealdelay);var h=parseInt(g(this).attr("headerindex"));a.revealdelay=setTimeout(function(){ddaccordion.expandone(a.headerclass,h,a.scrolltoheader)},a.mouseoverdelay||0)}else{g(this).trigger("evt_accordion",[true,a.scrolltoheader]);return false}});e.bind("mouseleave",function(){clearTimeout(a.revealdelay)});a.oninit(e.get(),f);g(window).bind("unload",function(){e.unbind();var h=[];d.filter(":visible").each(function(i){h.push(g(this).attr("contentindex"))});if(a.persiststate==true&&e.length>0){h=(h.length==0)?"-1c":h;ddaccordion.setCookie(a.headerclass,h)}})})}};

//preload any images defined inside ajaxloadingmsg variable
ddaccordion.preloadimages(jQuery(ddaccordion.ajaxloadingmsg).filter('img'))


//Initialize Slide to top accordion with ajax
ddaccordion.init({
	headerclass: "content-header", //Shared CSS class name of headers group
	contentclass: "content-group", //Shared CSS class name of contents group
	revealtype: "click", //Reveal content when user clicks or onmouseover the header? Valid value: "click" or "mouseover"
	mouseoverdelay: 300, //if revealtype="mouseover", set delay in milliseconds before header expands onMouseover
	collapseprev: true, //Collapse previous content (so only one open at any time)? true/false 
	defaultexpanded: [], //index of content(s) open by default [index1, index2, etc]
	onemustopen: false, //Specify whether at least one header should be open always (so never all headers closed)
	scrolltoheader: true, //scroll to header each time after it's been expanded by the user?
	animatedefault: false, //Should contents open by default be animated into view?
	persiststate: false, //persist state of opened contents within browser session?
	toggleclass: ["closed-content", "open-content"], //Two CSS classes to be applied to the header when it's collapsed and expanded, respectively ["class1", "class2"]
	togglehtml: ["none", "", ""], //Additional HTML added to the header when it's collapsed and expanded, respectively  ["position", "html1", "html2"] (see docs)
	animatespeed: "slow", //speed of animation: "fast", "normal", or "slow"
	oninit:function(expandedindices){ //custom code to run when headers have initalized
		//do nothing
	},
	onopenclose:function(header, index, state, isuseractivated){ //custom code to run whenever a header is opened or closed
		//do nothing
	}
})

 
//Initialize Slide to Top Regular Accordion
ddaccordion.init({
	headerclass: "accordion-header", //Shared CSS class name of headers group
	contentclass: "accordion-group", //Shared CSS class name of contents group
	revealtype: "click", //Reveal content when user clicks or onmouseover the header? Valid value: "click" or "mouseover"
	mouseoverdelay: 300, //if revealtype="mouseover", set delay in milliseconds before header expands onMouseover
	collapseprev: true, //Collapse previous content (so only one open at any time)? true/false 
	defaultexpanded: [], //index of content(s) open by default [index1, index2, etc]
	onemustopen: false, //Specify whether at least one header should be open always (so never all headers closed)
	scrolltoheader: true, //scroll to header each time after it's been expanded by the user?
	animatedefault: false, //Should contents open by default be animated into view?
	persiststate: false, //persist state of opened contents within browser session?
	toggleclass: ["closed-ac-content", "open-ac-content"], //Two CSS classes to be applied to the header when it's collapsed and expanded, respectively ["class1", "class2"]
	togglehtml: ["none", "", ""], //Additional HTML added to the header when it's collapsed and expanded, respectively  ["position", "html1", "html2"] (see docs)
	animatespeed: "slow", //speed of animation: "fast", "normal", or "slow"
	oninit:function(expandedindices){ //custom code to run when headers have initalized
		//do nothing
	},
	onopenclose:function(header, index, state, isuseractivated){ //custom code to run whenever a header is opened or closed
		//do nothing
	}
})



$(document).ready(function () {
   $( "body" ).addClass( "slt-accordion" );
});
